digraph G {
ForLoop1 [label = "for (i=0; i<=100; i++) { int8 y; a+=b; a=b; a%=b; a%=b; }"];
AssignmentExpression2 [label = "i=0"];
ForLoop1 -> AssignmentExpression2;
ConditionalExpression3 [label = "i<=100"];
ForLoop1 -> ConditionalExpression3;
UnaryExpression4 [label = "i++"];
ForLoop1 -> UnaryExpression4;
CompoundStatement5 [label = "{ int8 y; a+=b; a=b; a%=b; a%=b; }"];
ForLoop1 -> CompoundStatement5;
Identifier6 [label = "i"];
AssignmentExpression2 -> Identifier6;
IntegerLiteral7 [label = "0"];
AssignmentExpression2 -> IntegerLiteral7;
Identifier8 [label = "i"];
ConditionalExpression3 -> Identifier8;
IntegerLiteral9 [label = "100"];
ConditionalExpression3 -> IntegerLiteral9;
Identifier10 [label = "i"];
UnaryExpression4 -> Identifier10;
DeclarationStatement11 [label = "int8 y;"];
CompoundStatement5 -> DeclarationStatement11;
ExpressionStatement12 [label = "a+=b;"];
CompoundStatement5 -> ExpressionStatement12;
ExpressionStatement13 [label = "a=b;"];
CompoundStatement5 -> ExpressionStatement13;
ExpressionStatement14 [label = "a%=b;"];
CompoundStatement5 -> ExpressionStatement14;
ExpressionStatement15 [label = "a%=b;"];
CompoundStatement5 -> ExpressionStatement15;
VariableDeclaration16 [label = "int8 y"];
DeclarationStatement11 -> VariableDeclaration16;
AssignmentExpression17 [label = "a+=b"];
ExpressionStatement12 -> AssignmentExpression17;
AssignmentExpression18 [label = "a=b"];
ExpressionStatement13 -> AssignmentExpression18;
AssignmentExpression19 [label = "a%=b"];
ExpressionStatement14 -> AssignmentExpression19;
AssignmentExpression20 [label = "a%=b"];
ExpressionStatement15 -> AssignmentExpression20;
VariableDeclarator21 [label = "y"];
VariableDeclaration16 -> VariableDeclarator21;
Identifier22 [label = "a"];
AssignmentExpression17 -> Identifier22;
Identifier23 [label = "b"];
AssignmentExpression17 -> Identifier23;
Identifier24 [label = "a"];
AssignmentExpression18 -> Identifier24;
Identifier25 [label = "b"];
AssignmentExpression18 -> Identifier25;
Identifier26 [label = "a"];
AssignmentExpression19 -> Identifier26;
Identifier27 [label = "b"];
AssignmentExpression19 -> Identifier27;
Identifier28 [label = "a"];
AssignmentExpression20 -> Identifier28;
Identifier29 [label = "b"];
AssignmentExpression20 -> Identifier29;
Identifier30 [label = "y"];
VariableDeclarator21 -> Identifier30;
}

